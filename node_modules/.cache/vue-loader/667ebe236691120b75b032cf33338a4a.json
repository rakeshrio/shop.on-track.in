{"remainingRequest":"C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\src\\components\\display.vue?vue&type=template&id=a2e83ab4&scoped=true&","dependencies":[{"path":"C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\src\\components\\display.vue","mtime":1606879634124},{"path":"C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606750951265},{"path":"C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1606750966565},{"path":"C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606750951265},{"path":"C:\\Users\\RAKESH S\\Desktop\\Bikex-October\\otr\\otr\\node_modules\\vue-loader\\lib\\index.js","mtime":1606750966563}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}